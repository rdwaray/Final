[{"line":2,"elements":[{"start_timestamp":"2024-09-09T20:22:05.736Z","line":4,"name":"Successfully update user details","description":"","id":"create-patch-and-update-user;successfully-update-user-details","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":8997400,"status":"passed"},"line":5,"name":"I have user 2 data with name \"Ray\" and job \"QA\"","match":{"arguments":[{"val":"2","offset":12},{"val":"\"Ray\"","offset":29},{"val":"\"QA\"","offset":43}],"location":"API.create_update_patchUser.iHaveUserDataWithNameAndJob(int,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":3657858100,"status":"passed"},"line":6,"name":"I send a PUT request to update the user","match":{"location":"API.create_update_patchUser.iSendAPUTRequestToUpdateTheUser()"},"keyword":"When "},{"result":{"duration":3998300,"status":"passed"},"line":7,"name":"the response update code post should be 200","match":{"arguments":[{"val":"200","offset":40}],"location":"API.create_update_patchUser.theResponseUpdateCodePostShouldBe(int)"},"keyword":"Then "},{"result":{"duration":873237600,"status":"passed"},"line":8,"name":"the response should contain the user updated data","match":{"location":"API.create_update_patchUser.theResponseShouldContainTheUserUpdatedData()"},"keyword":"And "},{"result":{"duration":633132100,"status":"passed"},"line":9,"name":"the response should match the JSON schema \"create_update_patch.json\"","match":{"arguments":[{"val":"\"create_update_patch.json\"","offset":42}],"location":"API.create_update_patchUser.theResponseShouldMatchTheJSONSchema(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@CreatePatchUpdate"},{"name":"@UpdateUser"}]},{"start_timestamp":"2024-09-09T20:22:11.053Z","line":11,"name":"Successfully create a new user","description":"","id":"create-patch-and-update-user;successfully-create-a-new-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1002700,"status":"passed"},"line":12,"name":"I have user 2 data with name \"Dimas\" and job \"Tidur\"","match":{"arguments":[{"val":"2","offset":12},{"val":"\"Dimas\"","offset":29},{"val":"\"Tidur\"","offset":45}],"location":"API.create_update_patchUser.iHaveUserDataWithNameAndJob(int,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":583491100,"status":"passed"},"line":13,"name":"I send a POST request to create the user","match":{"location":"API.create_update_patchUser.iSendAPOSTRequestToCreateTheUser()"},"keyword":"When "},{"result":{"duration":1997200,"status":"passed"},"line":14,"name":"the response create code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"API.create_update_patchUser.theResponseCreateCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":32999400,"status":"passed"},"line":15,"name":"the response should contain the created user data","match":{"location":"API.create_update_patchUser.theResponseShouldContainTheCreatedUserData()"},"keyword":"And "},{"result":{"duration":7000600,"status":"passed"},"line":16,"name":"the response should match the JSON schema \"create_update_patch.json\"","match":{"arguments":[{"val":"\"create_update_patch.json\"","offset":42}],"location":"API.create_update_patchUser.theResponseShouldMatchTheJSONSchema(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@CreatePatchUpdate"},{"name":"@CreateUser"}]},{"start_timestamp":"2024-09-09T20:22:11.732Z","line":18,"name":"Successfully patch user details","description":"","id":"create-patch-and-update-user;successfully-patch-user-details","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000000,"status":"passed"},"line":19,"name":"I have user 2 data with name \"Ray\" and job \"QA\"","match":{"arguments":[{"val":"2","offset":12},{"val":"\"Ray\"","offset":29},{"val":"\"QA\"","offset":43}],"location":"API.create_update_patchUser.iHaveUserDataWithNameAndJob(int,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":608890400,"status":"passed"},"line":20,"name":"I send a PATCH request to update the user","match":{"location":"API.create_update_patchUser.iSendAPATCHRequestToUpdateTheUser()"},"keyword":"When "},{"result":{"duration":1003800,"status":"passed"},"line":21,"name":"the response patch code post should be 200","match":{"arguments":[{"val":"200","offset":39}],"location":"API.create_update_patchUser.theResponsePatchCodePostShouldBe(int)"},"keyword":"Then "},{"result":{"duration":32998800,"status":"passed"},"line":22,"name":"the response should contain the user patch data","match":{"location":"API.create_update_patchUser.theResponseShouldContainTheUserPatchData()"},"keyword":"And "},{"result":{"duration":8997000,"status":"passed"},"line":23,"name":"the response should match the JSON schema \"create_update_patch.json\"","match":{"arguments":[{"val":"\"create_update_patch.json\"","offset":42}],"location":"API.create_update_patchUser.theResponseShouldMatchTheJSONSchema(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@CreatePatchUpdate"},{"name":"@PatchUser"}]}],"name":"Create Patch and Update User","description":"","id":"create-patch-and-update-user","keyword":"Feature","uri":"file:src/test/resources/API/create_update_patch.feature","tags":[{"name":"@CreatePatchUpdate","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2024-09-09T20:22:12.414Z","line":4,"name":"Successfully delete a user by ID","description":"","id":"delete-user;successfully-delete-a-user-by-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":5,"name":"I have a user with ID 2","match":{"arguments":[{"val":"2","offset":22}],"location":"API.deleteUser.iHaveAUserWithID(int)"},"keyword":"Given "},{"result":{"duration":973700700,"status":"passed"},"line":6,"name":"I send a DELETE request to remove the user","match":{"location":"API.deleteUser.iSendADELETERequestToRemoveTheUser()"},"keyword":"When "},{"result":{"duration":4000200,"status":"passed"},"line":7,"name":"the response status code should be 204","match":{"arguments":[{"val":"204","offset":35}],"location":"API.deleteUser.theResponseStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"status":"passed"},"line":8,"name":"the response body should be empty","match":{"location":"API.deleteUser.theResponseBodyShouldBeEmpty()"},"keyword":"And "},{"result":{"duration":229852500,"status":"passed"},"line":9,"name":"the user with ID 2 should no longer exist","match":{"arguments":[{"val":"2","offset":17}],"location":"API.deleteUser.theUserWithIDShouldNoLongerExist(int)"},"keyword":"And "}],"tags":[{"name":"@Delete"},{"name":"@DeleteUser"}]}],"name":"Delete User","description":"","id":"delete-user","keyword":"Feature","uri":"file:src/test/resources/API/delete.feature","tags":[{"name":"@Delete","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2024-09-09T20:22:13.641Z","line":4,"name":"Successfully retrieve all user detail","description":"","id":"retrieve-all-user-details;successfully-retrieve-all-user-detail","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":243206100,"status":"passed"},"line":5,"name":"I ask all user detail on page 2","match":{"arguments":[{"val":"2","offset":30}],"location":"API.getListUser.iAskAllUserDetailOnPage(int)"},"keyword":"Given "},{"result":{"duration":211965300,"status":"passed"},"line":6,"name":"I request the details for theall user detail on page 2","match":{"arguments":[{"val":"2","offset":53}],"location":"API.getListUser.iRequestTheDetailsForTheallUserDetailOnPage(int)"},"keyword":"When "},{"result":{"status":"passed"},"line":7,"name":"the response code getAllUser should be 200","match":{"arguments":[{"val":"200","offset":39}],"location":"API.getListUser.theResponseCodeGetAllUserShouldBe(int)"},"keyword":"Then "},{"result":{"duration":27000900,"status":"passed"},"line":8,"name":"the response should contain of all user detail on page 2","match":{"arguments":[{"val":"2","offset":55}],"location":"API.getListUser.theResponseShouldContainOfAllUserDetailOnPage(int)"},"keyword":"And "},{"result":{"duration":649012600,"status":"passed"},"line":9,"name":"validation response get all user","match":{"location":"API.getListUser.validationResponseGetAllUser()"},"keyword":"Then "},{"result":{"duration":60480900,"status":"passed"},"line":10,"name":"validation response getAllUser json with JSONSchema \"list_all_user.json\"","match":{"arguments":[{"val":"\"list_all_user.json\"","offset":52}],"location":"API.getListUser.validationResponseGetAllUserJsonWithJSONSchema(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@RetrieveAllUserDetails"},{"name":"@GetAllUser"}]}],"name":"Retrieve All User Details","description":"","id":"retrieve-all-user-details","keyword":"Feature","uri":"file:src/test/resources/API/getListUser.feature","tags":[{"name":"@RetrieveAllUserDetails","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2024-09-09T20:22:14.885Z","line":4,"name":"Successfully retrieve user details by user ID","description":"","id":"retrieve-user;successfully-retrieve-user-details-by-user-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":998400,"status":"passed"},"line":5,"name":"I have a user with ID \"2\"","match":{"arguments":[{"val":"\"2\"","offset":22}],"location":"API.getUser.iHaveAUserWithID(java.lang.String)"},"keyword":"Given "},{"result":{"duration":328006000,"status":"passed"},"line":6,"name":"I request the details for the user with ID \"2\"","match":{"arguments":[{"val":"\"2\"","offset":43}],"location":"API.getUser.iRequestTheDetailsForTheUserWithID(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":7,"name":"the response code should be 200","match":{"arguments":[{"val":"200","offset":28}],"location":"API.getUser.theResponseCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":25000900,"status":"passed"},"line":8,"name":"the response should contain the user ID \"2\" details","match":{"arguments":[{"val":"\"2\"","offset":40}],"location":"API.getUser.theResponseShouldContainTheUserIDDetails(java.lang.String)"},"keyword":"And "},{"result":{"duration":116997500,"status":"passed"},"line":9,"name":"validation response get user","match":{"location":"API.getUser.validationResponseGetUser()"},"keyword":"Then "},{"result":{"duration":23996100,"status":"passed"},"line":10,"name":"validation response json with JSONSchema \"list_user.json\"","match":{"arguments":[{"val":"\"list_user.json\"","offset":41}],"location":"API.getUser.validationResponeJsonWithJSONSchema(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@RetrieveUser"},{"name":"@GetSingleUser"}]},{"start_timestamp":"2024-09-09T20:22:15.406Z","line":13,"name":"Unsuccesfully retrieve non-existent user details by user ID","description":"","id":"retrieve-user;unsuccesfully-retrieve-non-existent-user-details-by-user-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1001400,"status":"passed"},"line":14,"name":"I have a user with ID \"23\"","match":{"arguments":[{"val":"\"23\"","offset":22}],"location":"API.getUser.iHaveAUserWithID(java.lang.String)"},"keyword":"Given "},{"result":{"duration":596247900,"status":"passed"},"line":15,"name":"I request the details for the user with ID \"23\"","match":{"arguments":[{"val":"\"23\"","offset":43}],"location":"API.getUser.iRequestTheDetailsForTheUserWithID(java.lang.String)"},"keyword":"When "},{"result":{"duration":1002800,"status":"passed"},"line":16,"name":"the response code should be 404","match":{"arguments":[{"val":"404","offset":28}],"location":"API.getUser.theResponseCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":998900,"status":"passed"},"line":17,"name":"the response should be null","match":{"location":"API.getUser.theResponseShouldBeNull()"},"keyword":"And "},{"result":{"status":"passed"},"line":18,"name":"validation response  of non-existent user","match":{"location":"API.getUser.validationResponseOfNonExistentUser()"},"keyword":"Then "},{"result":{"duration":13000000,"status":"passed"},"line":19,"name":"validation response json with JSONSchema \"list_user.json\"","match":{"arguments":[{"val":"\"list_user.json\"","offset":41}],"location":"API.getUser.validationResponeJsonWithJSONSchema(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@RetrieveUser"},{"name":"@SingleUserNotFound"}]}],"name":"Retrieve User","description":"","id":"retrieve-user","keyword":"Feature","uri":"file:src/test/resources/API/getUser.feature","tags":[{"name":"@RetrieveUser","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2024-09-09T20:22:16.041Z","line":5,"name":"Successfully login a new user with valid details","description":"","id":"user-login;successfully-login-a-new-user-with-valid-details","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":7999300,"status":"passed"},"line":6,"name":"I provide login data a valid email \"jeve.holt@reqres.in\" and a valid password \"cityslicka\"","match":{"arguments":[{"val":"\"jeve.holt@reqres.in\"","offset":35},{"val":"\"cityslicka\"","offset":78}],"location":"API.loginUserAPI.iProvideLoginDataAValidEmailAndAValidPassword(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":638094800,"status":"passed"},"line":7,"name":"I submit the login request","match":{"location":"API.loginUserAPI.iSubmitTheLoginRequest()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"the response login code should be 201","match":{"arguments":[{"val":"201","offset":34}],"location":"API.loginUserAPI.theResponseLoginCodeShouldBe(int)"},"keyword":"And "},{"result":{"duration":16007500,"status":"passed"},"line":9,"name":"the response should contain the  user ID","match":{"location":"API.loginUserAPI.theResponseShouldContainTheUserID()"},"keyword":"Then "},{"result":{"duration":23996000,"status":"passed"},"line":10,"name":"the response login should be validated","match":{"location":"API.loginUserAPI.theResponseLoginShouldBeValidated()"},"keyword":"And "},{"result":{"duration":6999500,"status":"passed"},"line":11,"name":"the response login JSON should match the schema \"login.json\"","match":{"arguments":[{"val":"\"login.json\"","offset":48}],"location":"API.loginUserAPI.theResponseLoginJSONShouldMatchTheSchema(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@UserLogin"},{"name":"@Successfull-Login"}]},{"start_timestamp":"2024-09-09T20:22:16.757Z","line":14,"name":"Attempt to login with a missing password","description":"","id":"user-login;attempt-to-login-with-a-missing-password","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":15,"name":"I provide login data a valid email \"jeve.holt@reqres.in\" and an empty password","match":{"arguments":[{"val":"\"jeve.holt@reqres.in\"","offset":35}],"location":"API.loginUserAPI.iProvideLoginDataAValidEmailAndAnEmptyPassword(java.lang.String)"},"keyword":"Given "},{"result":{"duration":675097800,"status":"passed"},"line":16,"name":"I submit the login request","match":{"location":"API.loginUserAPI.iSubmitTheLoginRequest()"},"keyword":"When "},{"result":{"duration":1002200,"status":"passed"},"line":17,"name":"the response faliure login code should be 201","match":{"arguments":[{"val":"201","offset":42}],"location":"API.loginUserAPI.theResponseFaliureLoginCodeShouldBe(int)"},"keyword":"And "},{"result":{"duration":15009200,"status":"passed"},"line":18,"name":"the response login should contain an error message about the missing password","match":{"location":"API.loginUserAPI.theResponseLoginShouldContainAnErrorMessageAboutTheMissingPassword()"},"keyword":"Then "},{"result":{"duration":3997200,"status":"passed"},"line":19,"name":"the faliure login response JSON should match the schema \"login.json\"","match":{"arguments":[{"val":"\"login.json\"","offset":56}],"location":"API.loginUserAPI.theFaliureLoginResponseJSONShouldMatchTheSchema(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@UserLogin"},{"name":"@MissingPassword-Login"}]},{"start_timestamp":"2024-09-09T20:22:17.465Z","line":22,"name":"Attempt to login with a missing email","description":"","id":"user-login;attempt-to-login-with-a-missing-email","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":23,"name":"I provide login data an  empty email and a valid password \"cityslicka\"","match":{"arguments":[{"val":"\"cityslicka\"","offset":58}],"location":"API.loginUserAPI.iProvideLoginDataAnEmptyEmailAndAValidPassword(java.lang.String)"},"keyword":"Given "},{"result":{"duration":568731000,"status":"passed"},"line":24,"name":"I submit the login request","match":{"location":"API.loginUserAPI.iSubmitTheLoginRequest()"},"keyword":"When "},{"result":{"duration":1001300,"status":"passed"},"line":25,"name":"the response faliure login code should be 201","match":{"arguments":[{"val":"201","offset":42}],"location":"API.loginUserAPI.theResponseFaliureLoginCodeShouldBe(int)"},"keyword":"And "},{"result":{"duration":14016400,"status":"passed"},"line":26,"name":"the response login should contain an error message about the missing email","match":{"location":"API.loginUserAPI.theResponseLoginShouldContainAnErrorMessageAboutTheMissingEmail()"},"keyword":"Then "},{"result":{"duration":4002300,"status":"passed"},"line":27,"name":"the faliure login response JSON should match the schema \"login.json\"","match":{"arguments":[{"val":"\"login.json\"","offset":56}],"location":"API.loginUserAPI.theFaliureLoginResponseJSONShouldMatchTheSchema(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@UserLogin"},{"name":"@MissingPassword-Login"}]}],"name":"User Login","description":"","id":"user-login","keyword":"Feature","uri":"file:src/test/resources/API/login.feature","tags":[{"name":"@UserLogin","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2024-09-09T20:22:18.067Z","line":5,"name":"Successfully register a new user with valid details","description":"","id":"user-registration;successfully-register-a-new-user-with-valid-details","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":6,"name":"I provide a valid email \"jeve.ss@holtreqres.in\" and a valid password \"pi23stol\"","match":{"arguments":[{"val":"\"jeve.ss@holtreqres.in\"","offset":24},{"val":"\"pi23stol\"","offset":69}],"location":"API.registerUserAPI.iProvideAValidEmailAndAValidPassword(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":690377900,"status":"passed"},"line":7,"name":"I submit the registration request","match":{"location":"API.registerUserAPI.iSubmitTheRegistrationRequest()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"the response register code should be 201","match":{"arguments":[{"val":"201","offset":37}],"location":"API.registerUserAPI.theResponseRegisterCodeShouldBe(int)"},"keyword":"And "},{"result":{"duration":10999000,"status":"passed"},"line":9,"name":"the response should contain the newly created user ID","match":{"location":"API.registerUserAPI.theResponseShouldContainTheNewlyCreatedUserID()"},"keyword":"Then "},{"result":{"duration":19079700,"status":"passed"},"line":10,"name":"the response should be validated","match":{"location":"API.registerUserAPI.theResponseShouldBeValidated()"},"keyword":"And "},{"result":{"duration":5845800,"status":"passed"},"line":11,"name":"the response JSON should match the schema \"register.json\"","match":{"arguments":[{"val":"\"register.json\"","offset":42}],"location":"API.registerUserAPI.theResponseJSONShouldMatchTheSchema(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@UserRegistration"},{"name":"@Successfull-Registration"}]},{"start_timestamp":"2024-09-09T20:22:18.806Z","line":14,"name":"Attempt to register with an invalid email format","description":"","id":"user-registration;attempt-to-register-with-an-invalid-email-format","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":999300,"status":"passed"},"line":15,"name":"I provide an invalid email \"invalidemail\" and a valid password \"pi23stol\"","match":{"arguments":[{"val":"\"invalidemail\"","offset":27},{"val":"\"pi23stol\"","offset":63}],"location":"API.registerUserAPI.iProvideAnInvalidEmailAndAValidPassword(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":504063500,"status":"passed"},"line":16,"name":"I submit the registration request","match":{"location":"API.registerUserAPI.iSubmitTheRegistrationRequest()"},"keyword":"When "},{"result":{"status":"passed"},"line":17,"name":"the response faliure register code should be 201","match":{"arguments":[{"val":"201","offset":45}],"location":"API.registerUserAPI.theResponseFaliureRegisterCodeShouldBe(int)"},"keyword":"And "},{"result":{"duration":12999600,"status":"passed"},"line":18,"name":"the response should contain an error message about the invalid email","match":{"location":"API.registerUserAPI.theResponseShouldContainAnErrorMessageAboutTheInvalidEmail()"},"keyword":"Then "},{"result":{"duration":5001400,"status":"passed"},"line":19,"name":"the faliure response JSON should match the schema \"error_register.json\"","match":{"arguments":[{"val":"\"error_register.json\"","offset":50}],"location":"API.registerUserAPI.theFaliureResponseJSONShouldMatchTheSchema(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@UserRegistration"},{"name":"@Unsuccessfull-Registration"}]},{"start_timestamp":"2024-09-09T20:22:19.344Z","line":22,"name":"Attempt to register with a missing password","description":"","id":"user-registration;attempt-to-register-with-a-missing-password","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":23,"name":"I provide a valid email \"jeve.holtreqres.in\" and an empty password","match":{"arguments":[{"val":"\"jeve.holtreqres.in\"","offset":24}],"location":"API.registerUserAPI.iProvideAValidEmailAndAnEmptyPassword(java.lang.String)"},"keyword":"Given "},{"result":{"duration":1137873300,"status":"passed"},"line":24,"name":"I submit the registration request","match":{"location":"API.registerUserAPI.iSubmitTheRegistrationRequest()"},"keyword":"When "},{"result":{"status":"passed"},"line":25,"name":"the response faliure register code should be 201","match":{"arguments":[{"val":"201","offset":45}],"location":"API.registerUserAPI.theResponseFaliureRegisterCodeShouldBe(int)"},"keyword":"And "},{"result":{"duration":12004600,"status":"passed"},"line":26,"name":"the response should contain an error message about the missing password","match":{"location":"API.registerUserAPI.theResponseShouldContainAnErrorMessageAboutTheMissingPassword()"},"keyword":"Then "},{"result":{"duration":3999500,"status":"passed"},"line":27,"name":"the faliure response JSON should match the schema \"error_register.json\"","match":{"arguments":[{"val":"\"error_register.json\"","offset":50}],"location":"API.registerUserAPI.theFaliureResponseJSONShouldMatchTheSchema(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@UserRegistration"},{"name":"@MissingPassword-Registration"}]},{"start_timestamp":"2024-09-09T20:22:20.512Z","line":30,"name":"Attempt to register with a missing email","description":"","id":"user-registration;attempt-to-register-with-a-missing-email","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":31,"name":"I provide an  empty email and a valid password \"pi23stol\"","match":{"arguments":[{"val":"\"pi23stol\"","offset":47}],"location":"API.registerUserAPI.iProvideAnEmptyEmailAndAValidPassword(java.lang.String)"},"keyword":"Given "},{"result":{"duration":547315500,"status":"passed"},"line":32,"name":"I submit the registration request","match":{"location":"API.registerUserAPI.iSubmitTheRegistrationRequest()"},"keyword":"When "},{"result":{"duration":999900,"status":"passed"},"line":33,"name":"the response faliure register code should be 201","match":{"arguments":[{"val":"201","offset":45}],"location":"API.registerUserAPI.theResponseFaliureRegisterCodeShouldBe(int)"},"keyword":"And "},{"result":{"duration":20445900,"status":"passed"},"line":34,"name":"the response should contain an error message about the missing email","match":{"location":"API.registerUserAPI.theResponseShouldContainAnErrorMessageAboutTheMissingEmail()"},"keyword":"Then "},{"result":{"duration":6553700,"status":"passed"},"line":35,"name":"the faliure response JSON should match the schema \"error_register.json\"","match":{"arguments":[{"val":"\"error_register.json\"","offset":50}],"location":"API.registerUserAPI.theFaliureResponseJSONShouldMatchTheSchema(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@UserRegistration"},{"name":"@MissingPasswordRegistration"}]}],"name":"User Registration","description":"","id":"user-registration","keyword":"Feature","uri":"file:src/test/resources/API/register.feature","tags":[{"name":"@UserRegistration","type":"Tag","location":{"line":1,"column":1}}]}]